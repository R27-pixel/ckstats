generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"  // or "mysql"/"sqlite" if needed
  url      = env("DATABASE_URL")
}

model PoolStats {
  id           Int      @id @default(autoincrement())
  runtime      Int
  users        Int
  workers      Int
  idle         Int
  disconnected Int
  hashrate1m   BigInt
  hashrate5m   BigInt
  hashrate15m  BigInt
  hashrate1hr  BigInt
  hashrate6hr  BigInt
  hashrate1d   BigInt
  hashrate7d   BigInt
  diff         Float
  accepted     BigInt
  rejected     BigInt
  bestshare    BigInt
  SPS1m        Float
  SPS5m        Float
  SPS15m       Float
  SPS1h        Float
  timestamp    DateTime
}

model User {
  address     String      @id
  authorised  BigInt
  isActive    Boolean     @default(true)
  stats       UserStats[]
  workers     Worker[]
}

model UserStats {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userAddress], references: [address])
  userAddress String
  hashrate1m  BigInt
  hashrate5m  BigInt
  hashrate1hr BigInt
  hashrate1d  BigInt
  hashrate7d  BigInt
  lastShare   BigInt
  workerCount Int
  shares      BigInt
  bestShare   Float
  bestEver    BigInt
  createdAt   DateTime @default(now())
}

model Worker {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userAddress], references: [address])
  userAddress String
  name        String
  hashrate1m  BigInt
  hashrate5m  BigInt
  hashrate1hr BigInt
  hashrate1d  BigInt
  hashrate7d  BigInt
  lastUpdate  DateTime
  shares      BigInt
  bestShare   Float
  bestEver    BigInt
  stats       WorkerStats[]
}

model WorkerStats {
  id         Int      @id @default(autoincrement())
  worker     Worker   @relation(fields: [workerId], references: [id])
  workerId   Int
  hashrate1m BigInt
  hashrate5m BigInt
  hashrate1hr BigInt
  hashrate1d BigInt
  hashrate7d BigInt
  shares     BigInt
  bestShare  Float
  bestEver   BigInt
  createdAt  DateTime @default(now())
}
